from django.db import models
from django.contrib.auth import get_user_model

from uuid import uuid4

# Create your models here.

User = get_user_model()

def deserialize_user(user): # https://www.newtonsoft.com/json/help/html/DeserializeObject.htm
    return {
        'id': user.id, 'username': user.username, 'email': user.email,
        'first_name': user.first_name, 'last_name': user.last_name
    } # data -> json

class TrackableDateModel(models.Model): # https://docs.djangoproject.com/en/2.0/topics/db/models/#abstract-base-classes
    create_date = models.DateTimeField(auto_now_add=True) # capable to modified
    update_date = models.DateTimeField(auto_now=True) # autonow cannot be modified, automatically save when Model.save() is called

    class Meta:
        abstract = True # This model will then not be used to create any database table.
                        # Instead, when it is used as a base class for other models, its fields will be added to those of the child class.
def _generate_unique_uri():
    # Generates a unique uri for the chat session
    return str(uuid4()).replace('-', '')[:15]

class ChatSession(TrackableDateModel): # TrackableDateModel: have create_date and update_date
    # A Chat Session. The uri's are generated by taking the first 15 characters from a UUID.

    owner = models.ForeignKey(User, on_delete=models.PROTECT) # Raise ProtectedError when delete
    uri = models.URLField(default=_generate_unique_uri)

class ChatSessionMessage(TrackableDateModel):
    # #Store messages for a session.

    user = models.ForeignKey(User, on_delete=models.PROTECT)
    chat_session = models.ForeignKey(
        ChatSession, related_name='messages', on_delete=models.PROTECT
    )
    message = models.TextField(max_length=2000)

    def to_json(self):
        #deserialize message to JSON.
        return {'user': deserialize_user(self.user), 'message': self.message}

class ChatSessionMember(TrackableDateModel):
    #Store all users in a chat session.

    chat_session = models.ForeignKey(
        ChatSession, related_name='members', on_delete=models.PROTECT
    )
    user = models.ForeignKey(User, on_delete=models.PROTECT)
